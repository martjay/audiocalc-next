name: Build Tauri App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-latest
            args: "--target x86_64-pc-windows-msvc"
            artifactName: "AudioCalc-Windows"
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
            artifactName: "AudioCalc-macOS-arm64"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
            artifactName: "AudioCalc-macOS-x64"
          - platform: ubuntu-latest
            args: "--target x86_64-unknown-linux-gnu"
            artifactName: "AudioCalc-Linux"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Add Rust targets
        run: |
          rustup target add x86_64-pc-windows-msvc
          rustup target add aarch64-apple-darwin x86_64-apple-darwin
          rustup target add x86_64-unknown-linux-gnu

      - name: Install Rosetta (for macOS x86_64 builds on Apple Silicon)
        if: matrix.platform == 'macos-latest' && contains(matrix.args, 'x86_64-apple-darwin')
        run: |
          sudo softwareupdate --install-rosetta --agree-to-license || true

      - name: Install Linux deps
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # webkit2gtk: try 4.1 first (Ubuntu 24.04+), fallback to 4.0 (22.04)
          sudo apt-get install -y libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf || true
          (sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev)

      - name: Install frontend dependencies
        run: |
          npm ci --no-audit --no-fund
          npm run tauri -- --version

      - name: Setup Windows build environment
        if: matrix.platform == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.3
        with:
          msbuild-architecture: x64

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          # 确保 Rust 目标已安装
          rustup target add x86_64-pc-windows-msvc
          # 检查 Rust 工具链
          rustc --version
          cargo --version

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
          includeDebug: false
          targets: all

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifactName }}
          path: |
            src-tauri/target/**/release/bundle/**/**
