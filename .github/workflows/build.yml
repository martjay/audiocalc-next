name: Build Tauri App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-latest
            args: "--target x86_64-pc-windows-msvc"
            artifactName: "AudioCalc-Windows"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
            artifactName: "AudioCalc-macOS"
          - platform: ubuntu-latest
            args: "--target x86_64-unknown-linux-gnu"
            artifactName: "AudioCalc-Linux"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install Linux deps
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifactName }}
          path: |
            src-tauri/target/release/bundle/**/**
name: Build wxPython App

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.12']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install -U pip wheel setuptools

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt --prefer-binary

      - name: Build (PyInstaller - PyQt6)
        shell: bash
        run: |
          pyinstaller app_qt/main.py \
            --name "音频计算器NEXT" \
            --noconfirm \
            --windowed \
            --onefile \
            --icon icon.ico \
            --add-data "icon.ico:." \
            --add-data "index:index" \
            --add-data "icon.png:." 

      - name: Package artifact (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          powershell -Command "Compress-Archive -Path dist\\音频计算器NEXT.exe -DestinationPath 音频计算器NEXT-win.zip"

      - name: Package artifact (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          ditto -c -k --sequesterRsrc --keepParent "dist/音频计算器NEXT.app" "音频计算器NEXT-mac.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            *.zip

name: Build Tauri App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            os: 'windows'
            appName: 'AudioCalc'
            artifactName: 'AudioCalc-Windows'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            os: 'macos'
            appName: 'AudioCalc'
            artifactName: 'AudioCalc-macOS'

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Install dependencies (ubuntu only)
      if: matrix.os == 'ubuntu'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install frontend dependencies
      run: npm ci

    - name: Build the app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__
        releaseName: 'AudioCalc v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}

    - name: Upload Windows artifacts
      if: matrix.os == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifactName }}
        path: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/bundle/nsis/*.exe

    - name: Upload macOS artifacts
      if: matrix.os == 'macos'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifactName }}
        path: |
          src-tauri/target/release/bundle/dmg/*.dmg
          src-tauri/target/release/bundle/macos/*.app

  # 创建 Release
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: AudioCalc-Windows
        path: ./windows

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: AudioCalc-macOS
        path: ./macos

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: AudioCalc v${{ github.run_number }}
        body: |
          ## 音频计算器NEXT
          
          ### 下载
          - **Windows**: 下载 `.msi` 安装包或 `.exe` 绿色版
          - **macOS**: 下载 `.dmg` 磁盘镜像或 `.app` 应用包
          
          ### 功能
          - 混响参数计算
          - 延迟参数计算  
          - 压缩器预设
          - 自定义压缩参数
          - BPM 手动测速
        files: |
          ./windows/*
          ./macos/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
